The `2-matrix_divided` Module
=============================

This module contains a function `matrix_divided` that divides all elements of a matrix

Using `matrix_divided`
----------------------

Importing the function from the module:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Checking for module's docstring:
>>> m = __import__("0-add_integer").__doc__
>>> len(m) > 1
True

Checking for function's docstring:
>>> f = __import__("0-add_integer").add_integer.__doc__
>>> len(f) > 1
True

Test Conditions:
----------------

Testing function with scalar division with single-digit divisor:
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Testing function with scalar division with multi-digit divisor:
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 33)
[[0.03, 0.06, 0.09], [0.12, 0.15, 0.18]]

Testing function with scalar division with negative divisor:
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -3)
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

Testing function with scalar division with different sized matrix:
>>> matrix_divided([[-1, 2, -3], [-4, 5, -6], [-7, 8, -9]], -1)
[[1.0, -2.0, 3.0], [4.0, -5.0, 6.0], [7.0, -8.0, 9.0]]

Testing function with scalar division with floats:
>>> matrix_divided([[1.2, 2.2, 3.2], [4.2, 5.2, 6.2]], 1.2)
[[1.0, 1.83, 2.67], [3.5, 4.33, 5.17]]


Test Conditions for Invalid Inputs:
-----------------------------------------

Testing how function handles None arguments:
>>> matrix_divided(None, None)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing how function handles incorrect matrix arguments:
>>> matrix_divided({9, 8, 7}, 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing how function handles list of incorrect type:
>>> matrix_divided(["string"], 2)
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing how function handles rows of different lengths:
>>> matrix_divided([[1, 2, 3], [4, 8, 7, 9], [2]], 1.5)
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size

Testing how function handles division by 0:
>>> matrix_divided([[1, 2, 3], [5, 6, 7]], 0)
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero

Testing how function handles division by incorrect type:
>>> matrix_divided([[1, 2, 3], [5, 6, 7]], "25")
Traceback (most recent call last):
	...
TypeError: div must be a number
